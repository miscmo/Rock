digraph "rock::RockStream::RockCtx"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{rock::RockStream::\lRockCtx\n|+ request\l+ response\l|+ doSend()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{rock::AsyncSocketStream::Ctx\n|+ sn\l+ timeout\l+ result\l+ timed\l+ fiber\l+ timer\l|+ ~Ctx()\l+ Ctx()\l+ doRsp()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structrock_1_1AsyncSocketStream_1_1Ctx.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{rock::AsyncSocketStream\l::SendCtx\n||+ ~SendCtx()\l+ doSend()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structrock_1_1AsyncSocketStream_1_1SendCtx.html",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +scheduler" ,arrowhead="odiamond"];
  Node4 [label="{rock::Scheduler\n|# m_threadIds\l# m_threadCount\l# m_activeThreadCount\l# m_idleThreadCount\l# m_stopping\l# m_autoStop\l# m_rootThread\l|+ Scheduler()\l+ ~Scheduler()\l+ getName()\l+ start()\l+ stop()\l+ schedule()\l+ schedule()\l+ switchTo()\l+ dump()\l+ GetThis()\l+ GetMainFiber()\l# tickle()\l# run()\l# stopping()\l# idle()\l# setThis()\l# hasIdleThreads()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classrock_1_1Scheduler.html",tooltip="协程调度器"];
}
